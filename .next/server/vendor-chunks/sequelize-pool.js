"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/sequelize-pool";
exports.ids = ["vendor-chunks/sequelize-pool"];
exports.modules = {

/***/ "(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js":
/*!***********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/AggregateError.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AggregateError = void 0;\nclass AggregateError extends Error {\n    constructor(errors) {\n        super();\n        this.errors = errors;\n        this.name = 'AggregateError';\n    }\n    toString() {\n        const message = `AggregateError of:\\n${this.errors\n            .map((error) => error === this\n            ? '[Circular AggregateError]'\n            : error instanceof AggregateError\n                ? String(error).replace(/\\n$/, '').replace(/^/gm, '  ')\n                : String(error).replace(/^/gm, '    ').substring(2))\n            .join('\\n')}\\n`;\n        return message;\n    }\n}\nexports.AggregateError = AggregateError;\n//# sourceMappingURL=AggregateError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0FnZ3JlZ2F0ZUVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlZHdvb2Rmb250Ly4vbm9kZV9tb2R1bGVzL3NlcXVlbGl6ZS1wb29sL2xpYi9BZ2dyZWdhdGVFcnJvci5qcz9iZTc2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IHZvaWQgMDtcbmNsYXNzIEFnZ3JlZ2F0ZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9ycykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcbiAgICAgICAgdGhpcy5uYW1lID0gJ0FnZ3JlZ2F0ZUVycm9yJztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgQWdncmVnYXRlRXJyb3Igb2Y6XFxuJHt0aGlzLmVycm9yc1xuICAgICAgICAgICAgLm1hcCgoZXJyb3IpID0+IGVycm9yID09PSB0aGlzXG4gICAgICAgICAgICA/ICdbQ2lyY3VsYXIgQWdncmVnYXRlRXJyb3JdJ1xuICAgICAgICAgICAgOiBlcnJvciBpbnN0YW5jZW9mIEFnZ3JlZ2F0ZUVycm9yXG4gICAgICAgICAgICAgICAgPyBTdHJpbmcoZXJyb3IpLnJlcGxhY2UoL1xcbiQvLCAnJykucmVwbGFjZSgvXi9nbSwgJyAgJylcbiAgICAgICAgICAgICAgICA6IFN0cmluZyhlcnJvcikucmVwbGFjZSgvXi9nbSwgJyAgICAnKS5zdWJzdHJpbmcoMikpXG4gICAgICAgICAgICAuam9pbignXFxuJyl9XFxuYDtcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfVxufVxuZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IEFnZ3JlZ2F0ZUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWdncmVnYXRlRXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Deferred.js":
/*!*****************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Deferred.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Deferred = void 0;\nconst TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nclass Deferred {\n    constructor() {\n        this._promise = new Promise((resolve, reject) => {\n            this._reject = reject;\n            this._resolve = resolve;\n        });\n    }\n    registerTimeout(timeoutInMillis, callback) {\n        if (this._timeout)\n            return;\n        this._timeout = setTimeout(() => {\n            callback();\n            this.reject(new TimeoutError_1.TimeoutError('Operation timeout'));\n        }, timeoutInMillis);\n    }\n    _clearTimeout() {\n        if (!this._timeout)\n            return;\n        clearTimeout(this._timeout);\n    }\n    resolve(value) {\n        this._clearTimeout();\n        this._resolve(value);\n    }\n    reject(error) {\n        this._clearTimeout();\n        this._reject(error);\n    }\n    promise() {\n        return this._promise;\n    }\n}\nexports.Deferred = Deferred;\n//# sourceMappingURL=Deferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0RlZmVycmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQix1QkFBdUIsbUJBQU8sQ0FBQywrRUFBZ0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWR3b29kZm9udC8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvRGVmZXJyZWQuanM/N2MwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGVmZXJyZWQgPSB2b2lkIDA7XG5jb25zdCBUaW1lb3V0RXJyb3JfMSA9IHJlcXVpcmUoXCIuL1RpbWVvdXRFcnJvclwiKTtcbmNsYXNzIERlZmVycmVkIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3JlamVjdCA9IHJlamVjdDtcbiAgICAgICAgICAgIHRoaXMuX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVnaXN0ZXJUaW1lb3V0KHRpbWVvdXRJbk1pbGxpcywgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKHRoaXMuX3RpbWVvdXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMuX3RpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB0aGlzLnJlamVjdChuZXcgVGltZW91dEVycm9yXzEuVGltZW91dEVycm9yKCdPcGVyYXRpb24gdGltZW91dCcpKTtcbiAgICAgICAgfSwgdGltZW91dEluTWlsbGlzKTtcbiAgICB9XG4gICAgX2NsZWFyVGltZW91dCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl90aW1lb3V0KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fdGltZW91dCk7XG4gICAgfVxuICAgIHJlc29sdmUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgIHRoaXMuX3Jlc29sdmUodmFsdWUpO1xuICAgIH1cbiAgICByZWplY3QoZXJyb3IpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJUaW1lb3V0KCk7XG4gICAgICAgIHRoaXMuX3JlamVjdChlcnJvcik7XG4gICAgfVxuICAgIHByb21pc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm9taXNlO1xuICAgIH1cbn1cbmV4cG9ydHMuRGVmZXJyZWQgPSBEZWZlcnJlZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPURlZmVycmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Pool.js":
/*!*************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Pool.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pool = void 0;\nconst Deferred_1 = __webpack_require__(/*! ./Deferred */ \"(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\");\nconst AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nclass Pool {\n    constructor(factory) {\n        this.log = false;\n        if (!factory.create) {\n            throw new Error('create function is required');\n        }\n        if (!factory.destroy) {\n            throw new Error('destroy function is required');\n        }\n        if (!factory.validate) {\n            throw new Error('validate function is required');\n        }\n        if (typeof factory.min !== 'number' ||\n            factory.min < 0 ||\n            factory.min !== Math.round(factory.min)) {\n            throw new Error('min must be an integer >= 0');\n        }\n        if (typeof factory.max !== 'number' ||\n            factory.max <= 0 ||\n            factory.max !== Math.round(factory.max)) {\n            throw new Error('max must be an integer > 0');\n        }\n        if (factory.min > factory.max) {\n            throw new Error('max is smaller than min');\n        }\n        if (factory.maxUses !== undefined &&\n            (typeof factory.maxUses !== 'number' || factory.maxUses < 0)) {\n            throw new Error('maxUses must be an integer >= 0');\n        }\n        this.idleTimeoutMillis = factory.idleTimeoutMillis || 30000;\n        this.acquireTimeoutMillis = factory.acquireTimeoutMillis || 30000;\n        this.reapIntervalMillis = factory.reapIntervalMillis || 1000;\n        this.maxUsesPerResource = factory.maxUses || Infinity;\n        this.log = factory.log || false;\n        this._factory = factory;\n        this._count = 0;\n        this._draining = false;\n        this._pendingAcquires = [];\n        this._inUseObjects = [];\n        this._availableObjects = [];\n        this._removeIdleScheduled = false;\n    }\n    get size() {\n        return this._count;\n    }\n    get name() {\n        return this._factory.name;\n    }\n    get available() {\n        return this._availableObjects.length;\n    }\n    get using() {\n        return this._inUseObjects.length;\n    }\n    get waiting() {\n        return this._pendingAcquires.length;\n    }\n    get maxSize() {\n        return this._factory.max;\n    }\n    get minSize() {\n        return this._factory.min;\n    }\n    _log(message, level) {\n        if (typeof this.log === 'function') {\n            this.log(message, level);\n        }\n        else if (this.log) {\n            console.log(`${level.toUpperCase()} pool ${this.name || ''} - ${message}`);\n        }\n    }\n    _removeIdle() {\n        const toRemove = [];\n        const now = Date.now();\n        let i;\n        let available = this._availableObjects.length;\n        const maxRemovable = this.size - this.minSize;\n        let timeout;\n        this._removeIdleScheduled = false;\n        for (i = 0; i < available && maxRemovable > toRemove.length; i++) {\n            timeout = this._availableObjects[i].timeout;\n            if (now >= timeout) {\n                this._log('removeIdle() destroying obj - now:' + now + ' timeout:' + timeout, 'verbose');\n                toRemove.push(this._availableObjects[i].resource);\n            }\n        }\n        toRemove.forEach(this.destroy, this);\n        available = this._availableObjects.length;\n        if (available > 0) {\n            this._log('this._availableObjects.length=' + available, 'verbose');\n            this._scheduleRemoveIdle();\n        }\n        else {\n            this._log('removeIdle() all objects removed', 'verbose');\n        }\n    }\n    _scheduleRemoveIdle() {\n        if (!this._removeIdleScheduled) {\n            this._removeIdleScheduled = true;\n            this._removeIdleTimer = setTimeout(() => {\n                this._removeIdle();\n            }, this.reapIntervalMillis);\n        }\n    }\n    _dispense() {\n        let wrappedResource = null;\n        const waitingCount = this._pendingAcquires.length;\n        this._log(`dispense() clients=${waitingCount} available=${this._availableObjects.length}`, 'info');\n        if (waitingCount < 1) {\n            return;\n        }\n        while (this._availableObjects.length > 0) {\n            this._log('dispense() - reusing obj', 'verbose');\n            wrappedResource = this._availableObjects[this._availableObjects.length - 1];\n            if (!this._factory.validate(wrappedResource.resource)) {\n                this.destroy(wrappedResource.resource);\n                continue;\n            }\n            this._availableObjects.pop();\n            this._addResourceToInUseObjects(wrappedResource.resource, wrappedResource.useCount);\n            const deferred = this._pendingAcquires.shift();\n            return deferred.resolve(wrappedResource.resource);\n        }\n        if (this.size < this.maxSize) {\n            this._createResource();\n        }\n    }\n    _createResource() {\n        this._count += 1;\n        this._log(`createResource() - creating obj - count=${this.size} min=${this.minSize} max=${this.maxSize}`, 'verbose');\n        this._factory\n            .create()\n            .then((resource) => {\n            const deferred = this._pendingAcquires.shift();\n            if (deferred) {\n                this._addResourceToInUseObjects(resource, 0);\n                deferred.resolve(resource);\n            }\n            else {\n                this._addResourceToAvailableObjects(resource, 0);\n            }\n        })\n            .catch((error) => {\n            const deferred = this._pendingAcquires.shift();\n            this._count -= 1;\n            if (this._count < 0)\n                this._count = 0;\n            if (deferred) {\n                deferred.reject(error);\n            }\n            process.nextTick(() => {\n                this._dispense();\n            });\n        });\n    }\n    _addResourceToAvailableObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount,\n            timeout: Date.now() + this.idleTimeoutMillis,\n        };\n        this._availableObjects.push(wrappedResource);\n        this._dispense();\n        this._scheduleRemoveIdle();\n    }\n    _addResourceToInUseObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount,\n        };\n        this._inUseObjects.push(wrappedResource);\n    }\n    _ensureMinimum() {\n        let i, diff;\n        if (!this._draining && this.size < this.minSize) {\n            diff = this.minSize - this.size;\n            for (i = 0; i < diff; i++) {\n                this._createResource();\n            }\n        }\n    }\n    acquire() {\n        if (this._draining) {\n            return Promise.reject(new Error('pool is draining and cannot accept work'));\n        }\n        const deferred = new Deferred_1.Deferred();\n        deferred.registerTimeout(this.acquireTimeoutMillis, () => {\n            this._pendingAcquires = this._pendingAcquires.filter((pending) => pending !== deferred);\n        });\n        this._pendingAcquires.push(deferred);\n        this._dispense();\n        return deferred.promise();\n    }\n    release(resource) {\n        if (this._availableObjects.some((resourceWithTimeout) => resourceWithTimeout.resource === resource)) {\n            this._log('release called twice for the same resource: ' + new Error().stack, 'error');\n            return;\n        }\n        const index = this._inUseObjects.findIndex((wrappedResource) => wrappedResource.resource === resource);\n        if (index < 0) {\n            this._log('attempt to release an invalid resource: ' + new Error().stack, 'error');\n            return;\n        }\n        const wrappedResource = this._inUseObjects[index];\n        wrappedResource.useCount += 1;\n        if (wrappedResource.useCount >= this.maxUsesPerResource) {\n            this._log('release() destroying obj - useCount:' +\n                wrappedResource.useCount +\n                ' maxUsesPerResource:' +\n                this.maxUsesPerResource, 'verbose');\n            this.destroy(wrappedResource.resource);\n            this._dispense();\n        }\n        else {\n            this._inUseObjects.splice(index, 1);\n            this._addResourceToAvailableObjects(wrappedResource.resource, wrappedResource.useCount);\n        }\n    }\n    async destroy(resource) {\n        const available = this._availableObjects.length;\n        const using = this._inUseObjects.length;\n        this._availableObjects = this._availableObjects.filter((object) => object.resource !== resource);\n        this._inUseObjects = this._inUseObjects.filter((object) => object.resource !== resource);\n        if (available === this._availableObjects.length &&\n            using === this._inUseObjects.length) {\n            this._ensureMinimum();\n            return;\n        }\n        this._count -= 1;\n        if (this._count < 0)\n            this._count = 0;\n        try {\n            await this._factory.destroy(resource);\n        }\n        finally {\n            this._ensureMinimum();\n            if (!this._draining) {\n                process.nextTick(() => {\n                    this._dispense();\n                });\n            }\n        }\n    }\n    drain() {\n        this._log('draining', 'info');\n        this._draining = true;\n        const check = (callback) => {\n            if (this._pendingAcquires.length > 0) {\n                this._dispense();\n                setTimeout(() => {\n                    check(callback);\n                }, 100);\n                return;\n            }\n            if (this._availableObjects.length !== this._count) {\n                setTimeout(() => {\n                    check(callback);\n                }, 100);\n                return;\n            }\n            callback();\n        };\n        return new Promise((resolve) => check(resolve));\n    }\n    async destroyAllNow() {\n        this._log('force destroying all objects', 'info');\n        this._removeIdleScheduled = false;\n        clearTimeout(this._removeIdleTimer);\n        const resources = this._availableObjects.map((resource) => resource.resource);\n        const errors = [];\n        for (const resource of resources) {\n            try {\n                await this.destroy(resource);\n            }\n            catch (ex) {\n                this._log('Error destroying resource: ' + ex.stack, 'error');\n                errors.push(ex);\n            }\n        }\n        if (errors.length > 0) {\n            throw new AggregateError_1.AggregateError(errors);\n        }\n    }\n}\nexports.Pool = Pool;\n//# sourceMappingURL=Pool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js":
/*!*********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/TimeoutError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n}\nexports.TimeoutError = TimeoutError;\n//# sourceMappingURL=TimeoutError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL1RpbWVvdXRFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlZHdvb2Rmb250Ly4vbm9kZV9tb2R1bGVzL3NlcXVlbGl6ZS1wb29sL2xpYi9UaW1lb3V0RXJyb3IuanM/OWJiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGltZW91dEVycm9yID0gdm9pZCAwO1xuY2xhc3MgVGltZW91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0cy5UaW1lb3V0RXJyb3IgPSBUaW1lb3V0RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lb3V0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Pool = exports.AggregateError = exports.TimeoutError = void 0;\nvar TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nObject.defineProperty(exports, \"TimeoutError\", ({ enumerable: true, get: function () { return TimeoutError_1.TimeoutError; } }));\nvar AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nObject.defineProperty(exports, \"AggregateError\", ({ enumerable: true, get: function () { return AggregateError_1.AggregateError; } }));\nvar Pool_1 = __webpack_require__(/*! ./Pool */ \"(rsc)/./node_modules/sequelize-pool/lib/Pool.js\");\nObject.defineProperty(exports, \"Pool\", ({ enumerable: true, get: function () { return Pool_1.Pool; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVksR0FBRyxzQkFBc0IsR0FBRyxvQkFBb0I7QUFDNUQscUJBQXFCLG1CQUFPLENBQUMsK0VBQWdCO0FBQzdDLGdEQUErQyxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUM5SCx1QkFBdUIsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDakQsa0RBQWlELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQ3BJLGFBQWEsbUJBQU8sQ0FBQywrREFBUTtBQUM3Qix3Q0FBdUMsRUFBRSxxQ0FBcUMsdUJBQXVCLEVBQUM7QUFDdEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWR3b29kZm9udC8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvaW5kZXguanM/MmYzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9vbCA9IGV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSBleHBvcnRzLlRpbWVvdXRFcnJvciA9IHZvaWQgMDtcbnZhciBUaW1lb3V0RXJyb3JfMSA9IHJlcXVpcmUoXCIuL1RpbWVvdXRFcnJvclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRpbWVvdXRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGltZW91dEVycm9yXzEuVGltZW91dEVycm9yOyB9IH0pO1xudmFyIEFnZ3JlZ2F0ZUVycm9yXzEgPSByZXF1aXJlKFwiLi9BZ2dyZWdhdGVFcnJvclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFnZ3JlZ2F0ZUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBZ2dyZWdhdGVFcnJvcl8xLkFnZ3JlZ2F0ZUVycm9yOyB9IH0pO1xudmFyIFBvb2xfMSA9IHJlcXVpcmUoXCIuL1Bvb2xcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQb29sXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQb29sXzEuUG9vbDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/index.js\n");

/***/ })

};
;